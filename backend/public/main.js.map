{"version":3,"sources":["./src/app/add-dialog/add-dialog.component.ts","./src/app/add-dialog/add-dialog.component.html","./src/app/edit-dialog/edit-dialog.component.ts","./src/app/edit-dialog/edit-dialog.component.html","./src/app/shopping-item/shopping-item.component.ts","./src/app/shopping-item/shopping-item.component.html","./src/environments/environment.ts","./src/app/data.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/delete-confirmation/delete-confirmation.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DataService } from '../data.service';\nimport { List } from '../list';\n@Component({\n  selector: 'app-add-dialog',\n  templateUrl: './add-dialog.component.html',\n  styleUrls: ['./add-dialog.component.css'],\n  providers: [DataService]\n})\nexport class AddDialogComponent implements OnInit {\n  shoppingList: List[] = [];\n\n  constructor(public dialogRef: MatDialogRef<AddDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any, public dataService: DataService) { }\n\n  addList(form: { value: { listName: String, itemName: String; itemQuantity: Number; listDate: Date; }; }) {\n    let newList: List = {\n      listName: form.value.listName,\n      itemName: form.value.itemName,\n      itemQuantity: form.value.itemQuantity,\n      listDate: form.value.listDate\n    }\n    this.dataService.addShoppingList(newList)\n      .subscribe(() => {\n        this.getLists();\n      })\n  }\n\n  getLists() {\n    this.dataService.getShoppingList()\n      .subscribe(lists => {\n        this.shoppingList = lists;\n        console.log('data from dataservice: ' + this.shoppingList[0].itemName);\n      })\n  };\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  ngOnInit(): void {\n  }\n}","<h2 mat-dialog-title>Add List</h2>\n<div mat-dialog-content class=\"contentBox\">\n    <mat-form-field>\n        <label for=\"listname\">ListName:</label>\n        <input type=\"text\" [(ngModel)]=\"data.listName\" matInput required>\n    </mat-form-field>\n    <br>\n    <mat-form-field>\n        <label for=\"itemName\">ItemName:</label>\n        <input matInput type=\"text\" [(ngModel)]=\"data.itemName\" matInput required>\n    </mat-form-field>\n    <br>\n    <mat-form-field>\n        <label for=\"itemQuantity\">ItemQuantity:</label>\n        <input matInput type=\"number\" [(ngModel)]=\"data.itemQuantity\" matInput required>\n    </mat-form-field>\n    <mat-dialog-actions>\n        <button  [mat-dialog-close]=\"data\" class=\"btn btn-success\"\n            (click)=\"addList( { value: {listName: data.listName, itemName: data.itemName, itemQuantity: data.itemQuantity, listDate: data.listDate  } }); \"  >Save</button>\n        <button class=\"btn btn-danger\" (click)=\"closeDialog()\">Cancel</button>\n    </mat-dialog-actions>\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DataService } from '../data.service';\nimport { List } from '../list';\n\n@Component({\n  selector: 'app-edit-dialog',\n  templateUrl: './edit-dialog.component.html',\n  styleUrls: ['./edit-dialog.component.css']\n})\nexport class EditDialogComponent implements OnInit {\n  shoppingList: List[] = [];\n  selectedList!: List;\n\n\n  constructor(private dataService: DataService, public dialogRef: MatDialogRef<EditDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n  getLists() {\n    this.dataService.getShoppingList()\n      .subscribe(lists => {\n        this.shoppingList = lists;\n        location.reload();\n      })\n  };\n\n  editList(form: { value: { _id: String, listName: String; itemName: String; itemQuantity: Number; listDate: Date; }; }) {\n    let newList: List = {\n      _id: form.value._id,\n      listName: form.value.listName,\n      itemName: form.value.itemName,\n      itemQuantity: form.value.itemQuantity,\n      listDate: form.value.listDate\n    }\n    this.dataService.updateShoppingList(newList)\n      .subscribe(result => {\n        console.log(newList);\n        this.getLists();\n      });\n  };\n\n  closeDialog() {\n    this.dialogRef.close();\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3>Edit Items of List</h3>\r\n<mat-form-field>\r\n    <label for=\"\">ListName:</label>\r\n    <input type=\"text\" [(ngModel)]=\"data.listName\" matInput required>\r\n</mat-form-field>\r\n<br>\r\n<mat-form-field>\r\n    <label for=\"\">ItemName:</label>\r\n    <input matInput type=\"text\" [(ngModel)]=\"data.itemName\" matInput required>\r\n</mat-form-field>\r\n<br>\r\n<mat-form-field>\r\n    <label for=\"\">ItemQuantity:</label>\r\n    <input matInput type=\"number\" [(ngModel)]=\"data.itemQuantity\" matInput required>\r\n</mat-form-field>\r\n<mat-dialog-actions>\r\n    <button type=\"submit\" [mat-dialog-close]=\"data\" class=\"btn btn-success\"\r\n        (click)=\"editList( { value: { _id: data._id, listName: data.listName, itemName: data.itemName, itemQuantity: data.itemQuantity, listDate: data.listDate } });\">Save\r\n    </button>\r\n    <button class=\"btn btn-danger\" (click)=\"closeDialog()\">Cancel</button>\r\n</mat-dialog-actions>","import { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { List } from '../list';\nimport { DataService } from '../data.service';\nimport { Item } from '../item';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DataSource } from '@angular/cdk/table';\nimport { Observable, Subscription } from 'rxjs';\nimport { AddDialogComponent } from '../add-dialog/add-dialog.component';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { EditDialogComponent } from '../edit-dialog/edit-dialog.component';\nimport { DeleteConfirmationComponent } from '../delete-confirmation/delete-confirmation.component';\n@Component({\n  selector: 'app-shopping-item',\n  templateUrl: './shopping-item.component.html',\n  styleUrls: ['./shopping-item.component.css'],\n  providers: [DataService]\n})\nexport class ShoppingItemComponent {\n\n  @Input() filterString = \"\";\n  shoppingList: List[] = [];\n  selectedList: any;\n  toggleForm: boolean | undefined;\n  itemName!: String;\n  listName!: String;\n  itemQuantity!: Number;\n  public searchValue = \"\";\n  public resultCount!: number;\n\n  @ViewChild(MatPaginator)\n  paginator!: MatPaginator;\n  @ViewChild(MatSort)\n  sort!: MatSort;\n\n\n  //constructor(private dataService: DataService) {}\n  constructor(public dataService: DataService, public dialog: MatDialog) { this.resultCount = this.dataService.getProductCount(); }\n  //list functions\n  getLists() {\n    this.dataService.getShoppingList()\n      .subscribe(lists => {\n        this.shoppingList = lists;\n        console.log('data from dataservice: ' + this.shoppingList[0].itemName);\n      })\n  };\n  addList(form: { value: { listName: String, itemName: String; itemQuantity: Number; listDate: Date; }; }) {\n    let newList: List = {\n      listName: form.value.listName,\n      itemName: form.value.itemName,\n      itemQuantity: form.value.itemQuantity,\n      listDate: form.value.listDate\n    }\n    this.dataService.addShoppingList(newList)\n      .subscribe(() => {\n        this.getLists();\n      })\n  }\n\n  deleteList(id: any) {\n    this.dataService.deleteShoppingList(id)\n      .subscribe(data => {\n        location.reload();\n        console.log(data);\n        if (data.n == 1) {\n          for (var i = 0; i < this.shoppingList.length; i++) {\n            if (id == this.shoppingList[i]._id) {\n              this.shoppingList.splice(i, 1);\n            }\n          }\n        }\n      })\n  }\n\n  editList(form: { value: { listName: String; itemName: String; itemQuantity: Number; listDate: Date; }; }) {\n    let newList: List = {\n      _id: this.selectedList._id,\n      listName: form.value.listName,\n      itemName: form.value.itemName,\n      itemQuantity: form.value.itemQuantity,\n      listDate: form.value.listDate\n    }\n    this.dataService.updateShoppingList(newList)\n      .subscribe(result => {\n        console.log('Orginal Item to be updated with old values: ' + result);\n        this.getLists();\n      });\n    this.toggleForm = !this.toggleForm;\n  };\n\n  showEditForm(list: any) {\n    this.selectedList = list;\n    this.toggleForm = !this.toggleForm;\n  }\n\n  searchList(search: String) {\n    console.log(search);\n    this.dataService.findShoppingList(search)\n      .subscribe(lists => {\n        this.shoppingList = lists;\n        console.log('data from dataservice: ' + this.shoppingList[0].itemName);\n      })\n  };\n\n\n  // items functions\n  addItem(form: { value: { itemName: String; itemQuantity: Number; } }) {\n    let newItem: Item = {\n      itemName: form.value.itemName,\n      itemQuantity: form.value.itemQuantity,\n    }\n    this.dataService.updateShoppingList(this.selectedList),\n      this.selectedList.itemName.push(),\n      this.selectedList.itemQuantity.push()\n        .subscribe((item: any) => {\n          this.getLists();\n        })\n  }\n\n  //Dialogs \n  openAddDialog(): void {\n    const dialogRef = this.dialog.open(AddDialogComponent, {\n      width: '500px',\n      data: { listName: this.listName, itemName: this.itemName, itemQuantity: this.itemQuantity }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      location.reload();\n      console.log('The dialog was closed');\n      console.log(result.listName);\n    });\n  }\n\n  openEditDialog(form: List) {\n    const dialogRef = this.dialog.open(EditDialogComponent, {\n      width: '500px',\n      data: { _id: form._id, listName: form.listName, itemName: form.itemName, itemQuantity: form.itemQuantity}\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      console.log( form._id);\n      console.log(result.listName);\n      this.getLists();\n    });\n  }\n\n  openDeleteConfirmDialog(id: any) {\n    const dialogRef = this.dialog.open(DeleteConfirmationComponent);\n    dialogRef.afterClosed().subscribe(confirmresult => {\n      console.log(confirmresult);\n      if (confirmresult) {\n        console.log(\"Delete confirm is approved by user.\");         //if dialog result is yes, delete post  \n        this.deleteList(id);\n      }\n      else {                        //if dialog result is no, DO NOT delete post  \n        console.log(\"Delete confirm is cancelled by user.\");\n      }\n    })\n  }\n\n  //DataSources\n  dataSource = new UserDataSource(this.dataService);\n  displayedColumns: string[] = ['listName', 'itemName', 'itemQuantity', 'actions'];\n\n}\nexport class UserDataSource extends DataSource<any> {\n  constructor(private dataService: DataService) {\n    super();\n  }\n  connect(): Observable<List[]> {\n    console.log(\"Connection works\");\n    return this.dataService.getShoppingList();\n  }\n  disconnect() { }\n}\n","<body class=\"bg-info\">\r\n  <nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n    <a class=\"navbar-brand\" style=\"font-weight: bolder;\">My ShoppingList</a>\r\n    <button class=\" btn btn-success\" (click)=\"openAddDialog()\">\r\n      <mat-icon>add</mat-icon>\r\n    </button>\r\n  </nav>\r\n  <h2>List of shoppingLists</h2>\r\n  <div id=\"table-wrapper\">\r\n    <div id=\"table-scroll\" class=\"mat-elevation-z8\">\r\n      <mat-table [dataSource]=\"dataSource\">\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n        <ng-container matColumnDef=\"listName\">\r\n          <mat-header-cell *matHeaderCellDef> List Name </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let list\"> {{list.listName}} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"itemName\">\r\n          <mat-header-cell *matHeaderCellDef> Item Name </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let list\"> {{list.itemName}} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"itemQuantity\">\r\n          <mat-header-cell *matHeaderCellDef> Item Quantity </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let list\"> {{list.itemQuantity}} </mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"actions\">\r\n          <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\">\r\n            <button class=\"btn btn-warning \" (click)=\"openEditDialog(row)\">\r\n              <mat-icon>create</mat-icon>\r\n            </button>\r\n            <button class=\"btn btn-danger\" (click)=\"openDeleteConfirmDialog(row._id)\">\r\n              <mat-icon>delete</mat-icon>\r\n            </button>\r\n          </mat-cell>\r\n        </ng-container>\r\n      </mat-table>\r\n    </div>\r\n  </div>\r\n  <h3 style=\"font-style: italic;\">A Project developed by Sidharth Jaiswal</h3>\r\n</body>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers } from '@angular/http';\nimport { map } from \"rxjs/operators\";\nimport { List } from './list';\nimport { Item } from './item';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  ListArray: List[] = [];\n\n  constructor(private http: Http) { }\n\n  // list Functions\n  getShoppingList() {\n    return this.http.get('api/lists/')\n      .pipe(map(res => res.json()));\n  }\n\n  addShoppingList(newList: List) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('api/list/', newList, { headers: headers })\n      .pipe(map(res => res.json()));\n\n  }\n\n\n  deleteShoppingList(id: string) {\n    return this.http.delete('api/list/' + id)\n      .pipe(map(res => res.json()));\n  }\n\n  findShoppingList(Value: any) {\n    return this.http.get('api/searchlist/' + Value)\n      .pipe(map(res => res.json()));\n  }\n  updateShoppingList(newList: List) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.put('api/list/' + newList._id, newList, { headers: headers })\n      .pipe(map(res => res.json()));\n  }\n\n  //items functions\n  addShoppingItem(newItem: Item) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('api/list/', newItem, { headers: headers })\n      .pipe(map(res => res.json()));\n\n  }\n  searchShoppingList(listName: string) {\n    return this.http.delete('api/list/' + listName)\n      .pipe(map(res => res.json()));\n  }\n\n\n  //refresh table after adding new list\n  fillTable(list: List) {\n    this.ListArray.push(list);\n\n    console.log(\"List added to table\");\n  }\n  public getProductCount(): number {\n    return this.ListArray.length;\n  }\n\n}\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular';\n}\n","<app-shopping-item></app-shopping-item>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule} from '@angular/http';\nimport {FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { ShoppingItemComponent } from './shopping-item/shopping-item.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {  MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTableModule } from '@angular/material/table';\nimport { AddDialogComponent } from './add-dialog/add-dialog.component';\nimport { EditDialogComponent } from './edit-dialog/edit-dialog.component';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport {MatIconModule} from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { DeleteConfirmationComponent } from './delete-confirmation/delete-confirmation.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    ShoppingItemComponent,\n    AddDialogComponent,\n    EditDialogComponent,\n    DeleteConfirmationComponent\n \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDialogModule,\n    MatTableModule,\n    MatToolbarModule,\n    MatSortModule,\n    ScrollingModule,\n    MatIconModule,\n    MatButtonModule,\n    MatPaginatorModule,\n    MatTableModule,\n\n  ],\n  exports: [\n            MatDialogModule,\n            MatTableModule,\n            MatToolbarModule,\n            ],\n\n  entryComponents: [\n \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-delete-confirmation',\n  template: `\n  <h1 mat-dialog-title>Are you sure you want to delete?</h1>    \n  <mat-dialog-actions>  \n      <button mat-raised-button class=\"btn btn-success\" [mat-dialog-close]=\"true\"><mat-icon>done</mat-icon></button>  \n      <button mat-raised-button class=\"btn btn-danger\" [mat-dialog-close]=\"false\"><mat-icon>cancel</mat-icon></button>  \n  </mat-dialog-actions>  \n  `,\n  styleUrls: ['./delete-confirmation.component.css']\n})\nexport class DeleteConfirmationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}